name: Simple Android GPU Build

on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/android-gpu-simple.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Setup NDK
      run: |
        # Download and setup NDK directly
        wget -q https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
        unzip -q android-ndk-r25c-linux.zip
        export ANDROID_NDK_HOME=$PWD/android-ndk-r25c
        echo "ANDROID_NDK_HOME=$ANDROID_NDK_HOME" >> $GITHUB_ENV
        echo "$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin" >> $GITHUB_PATH
    
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake ninja-build
    
    - name: Build CPU Library First (Test)
      run: |
        mkdir -p build-test && cd build-test
        cmake .. \
          -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI=arm64-v8a \
          -DANDROID_PLATFORM=android-24 \
          -DCMAKE_BUILD_TYPE=Release \
          -DBUILD_SHARED_LIBS=ON \
          -DLLAMA_BUILD_TESTS=OFF \
          -DLLAMA_BUILD_EXAMPLES=OFF
        
        make -j4 || (echo "Build failed, showing errors:" && make VERBOSE=1)
        
        echo "=== Libraries built ==="
        find . -name "*.so" -type f -exec ls -lh {} \;
    
    - name: Prepare Artifacts
      if: always()
      run: |
        mkdir -p upload
        find . -name "*.so" -type f -exec cp {} upload/ \; 2>/dev/null || true
        echo "Build attempt completed at $(date)" > upload/build.log
        ls -la upload/ || echo "No files to upload"
    
    - name: Upload Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: android-build-${{ github.run_number }}
        path: upload/
        retention-days: 7